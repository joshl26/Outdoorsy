<!DOCTYPE html>
<html lang="en">
  <head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- Primary Meta Tags -->
  <meta
    name="title"
    content="<%= typeof pageTitle !== 'undefined' ? pageTitle : 'Outdoorsy - Discover & Share Outdoor Adventures' %>"
  />
  <meta
    name="description"
    content="<%= typeof pageDescription !== 'undefined' ? pageDescription : 'Explore amazing campgrounds, hiking trails, and outdoor destinations. Share your adventures and discover new places to explore in the great outdoors.' %>"
  />
  <meta
    name="keywords"
    content="camping, hiking, outdoors, campgrounds, trails, nature, adventure, travel"
  />
  <meta name="author" content="Outdoorsy" />
  <meta name="robots" content="index, follow" />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://outdoorsy.com<%= typeof currentUrl !== 'undefined' ? currentUrl : '/' %>" />
  <meta
    property="og:title"
    content="<%= typeof pageTitle !== 'undefined' ? pageTitle : 'Outdoorsy - Discover & Share Outdoor Adventures' %>"
  />
  <meta
    property="og:description"
    content="<%= typeof pageDescription !== 'undefined' ? pageDescription : 'Explore amazing campgrounds, hiking trails, and outdoor destinations. Share your adventures and discover new places to explore in the great outdoors.' %>"
  />
  <meta
    property="og:image"
    content="https://outdoorsy.com/outdoorsy/social-preview.jpg"
  />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content="https://outdoorsy.com<%= typeof currentUrl !== 'undefined' ? currentUrl : '/' %>" />
  <meta
    property="twitter:title"
    content="<%= typeof pageTitle !== 'undefined' ? pageTitle : 'Outdoorsy - Discover & Share Outdoor Adventures' %>"
  />
  <meta
    property="twitter:description"
    content="<%= typeof pageDescription !== 'undefined' ? pageDescription : 'Explore amazing campgrounds, hiking trails, and outdoor destinations. Share your adventures and discover new places to explore in the great outdoors.' %>"
  />
  <meta
    property="twitter:image"
    content="https://outdoorsy.com/outdoorsy/social-preview.jpg"
  />

  <!-- Favicon -->
  <link
    rel="icon"
    type="image/png"
    href="/outdoorsy/favicon-96x96.png"
    sizes="96x96"
  />
  <link rel="icon" type="image/svg+xml" href="/outdoorsy/favicon.svg" />
  <link rel="shortcut icon" href="/outdoorsy/favicon.ico" />
  <link
    rel="apple-touch-icon"
    sizes="180x180"
    href="/outdoorsy/apple-touch-icon.png"
  />
  <link rel="manifest" href="/outdoorsy/site.webmanifest" />

  <!-- Theme Color -->
  <meta name="theme-color" content="#2d5016" />

  <title><%= typeof pageTitle !== 'undefined' ? pageTitle : 'Outdoorsy - Discover & Share Outdoor Adventures' %></title>

  <!-- Preconnect to external domains for performance -->
  <link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin />
  <link rel="preconnect" href="https://api.mapbox.com" crossorigin />
  <link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin />

  <!-- Bootstrap CSS (stable v5.3) -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
    crossorigin="anonymous"
  />


  <!-- Font Awesome -->
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  />

  <!-- Mapbox GL JS CSS -->
  <link
    href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css"
    rel="stylesheet"
  />

  <!-- Custom CSS - Load after vendor styles -->
  <link rel="stylesheet" href="/outdoorsy/stylesheets/app.css" />

  <!-- Page-specific CSS - Dynamic loading based on pageClass -->
  <%
    let pageClass = null;
    if (typeof locals.pageClass !== 'undefined') {
      pageClass = locals.pageClass;
    } else if (typeof pageClassGlobal !== 'undefined') {
      pageClass = pageClassGlobal;
    }
    const isHome = pageClass === 'home' || (typeof req !== 'undefined' && req.path === '/');
  %>

  <!-- Mapbox GL JS -->
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>

  <!-- Structured Data for SEO -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "Outdoorsy",
    "url": "https://joshlehman.ca/outdoorsy",
    "description": "Discover and share outdoor adventures, campgrounds, and hiking trails.",
    "potentialAction": {
      "@type": "SearchAction",
      "target": "https://joshlehman.ca/outdoorsy/campgrounds?q={search_term_string}",
      "query-input": "required name=search_term_string"
    }
  }
  </script>
  
</head>
  
  <body class="d-flex flex-column page-<%= isHome ? 'home' : (pageClass || 'default') %>">
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="skip-link">Skip to main content</a>

    <%- include('../partials/navbar') %>

    <!-- Flash messages / alerts -->
    <% if (success && success.length) { %>
      <div class="container mt-3">
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <%= success %>
          <button 
            type="button" 
            class="btn-close" 
            data-bs-dismiss="alert" 
            aria-label="Close alert"
          ></button>
        </div>
      </div>
    <% } %>
    
    <% if (error && error.length) { %>
      <div class="container mt-3">
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <%= error %>
          <button 
            type="button" 
            class="btn-close" 
            data-bs-dismiss="alert" 
            aria-label="Close alert"
          ></button>
        </div>
      </div>
    <% } %>

    <!-- Main content area -->
    <% if (isHome) { %>
      <!-- Home page uses full-width layout -->
      <main id="main-content" class="fade-in">
        <%- body %>
      </main>
    <% } else { %>
      <!-- Standard pages use container layout -->
      <main id="main-content" class="container mt-5 fade-in">
        <%- body %>
      </main>
    <% } %>

    <%- include('../partials/footer') %>

    <!-- Bootstrap JS Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
      crossorigin="anonymous"
      defer
    ></script>

    <!-- bs-custom-file-input -->
    <script
      src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"
      defer
    ></script>

    <!-- Custom JavaScript for enhancements -->
    <script defer>
      document.addEventListener('DOMContentLoaded', function() {
        // Initialize custom file input
        if (typeof bsCustomFileInput !== 'undefined') {
          bsCustomFileInput.init();
        }

        // Add scrolled class to navbar on scroll
        const navbar = document.querySelector('.navbar');
        if (navbar) {
          const handleScroll = debounce(function() {
            if (window.scrollY > 50) {
              navbar.classList.add('scrolled');
            } else {
              navbar.classList.remove('scrolled');
            }
          }, 10);
          
          window.addEventListener('scroll', handleScroll, { passive: true });
        }

        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function (e) {
            const href = this.getAttribute('href');
            if (href === '#') return;
            
            const target = document.querySelector(href);
            if (target) {
              e.preventDefault();
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
              
              // Update focus for accessibility
              target.setAttribute('tabindex', '-1');
              target.focus();
            }
          });
        });

        // Auto-dismiss alerts after 5 seconds
        const alerts = document.querySelectorAll('.alert:not(.alert-permanent)');
        alerts.forEach(alert => {
          setTimeout(() => {
            const bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
            bsAlert.close();
          }, 5000);
        });

        // Intersection Observer for fade-in animations
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        };

        const fadeInObserver = new IntersectionObserver(function(entries) {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('fade-in');
              fadeInObserver.unobserve(entry.target);
            }
          });
        }, observerOptions);

        // Observe all cards and feature cards for animation
        document.querySelectorAll('.card, .feature-card, .stat-item').forEach(element => {
          fadeInObserver.observe(element);
        });

        // Lazy load images
        if ('IntersectionObserver' in window) {
          const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                const img = entry.target;
                if (img.dataset.src) {
                  img.src = img.dataset.src;
                  img.removeAttribute('data-src');
                  img.classList.add('loaded');
                  observer.unobserve(img);
                }
              }
            });
          });

          document.querySelectorAll('img[data-src]').forEach(img => {
            imageObserver.observe(img);
          });
        }

        // Form validation enhancement
        const forms = document.querySelectorAll('.needs-validation');
        forms.forEach(form => {
          form.addEventListener('submit', function(event) {
            if (!form.checkValidity()) {
              event.preventDefault();
              event.stopPropagation();
              
              // Focus on first invalid field
              const firstInvalid = form.querySelector(':invalid');
              if (firstInvalid) {
                firstInvalid.focus();
              }
            }
            form.classList.add('was-validated');
          });
        });

        // Add loading state to buttons on form submit
        const submitButtons = document.querySelectorAll('form button[type="submit"]');
        submitButtons.forEach(button => {
          const form = button.closest('form');
          if (form) {
            form.addEventListener('submit', function(e) {
              if (form.checkValidity()) {
                button.classList.add('loading');
                button.disabled = true;
                const originalText = button.innerHTML;
                button.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Loading...';
                
                // Re-enable button after 5 seconds as fallback
                setTimeout(() => {
                  button.classList.remove('loading');
                  button.disabled = false;
                  button.innerHTML = originalText;
                }, 5000);
              }
            });
          }
        });

        // Mapbox popup enhancement
        if (typeof mapboxgl !== 'undefined') {
          const style = document.createElement('style');
          style.textContent = `
            .mapboxgl-popup-content {
              font-family: inherit !important;
            }
          `;
          document.head.appendChild(style);
        }

        // Announce page changes for screen readers
        const announcer = document.createElement('div');
        announcer.setAttribute('role', 'status');
        announcer.setAttribute('aria-live', 'polite');
        announcer.setAttribute('aria-atomic', 'true');
        announcer.className = 'sr-only';
        document.body.appendChild(announcer);
      });

      // Performance optimization: Debounce function
      function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
          const later = () => {
            clearTimeout(timeout);
            func(...args);
          };
          clearTimeout(timeout);
          timeout = setTimeout(later, wait);
        };
      }
    </script>
 <!-- Bootstrap CSS (stable v5.3) -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
    crossorigin="anonymous"
  />
    <!-- Analytics placeholder (add your tracking code here) -->
    <!-- <script async src="https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID"></script> -->
  </body>
</html>