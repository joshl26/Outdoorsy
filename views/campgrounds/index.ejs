
<div id="cluster-map"></div>

<div class="container">
  <h1>All Campgrounds</h1>

  <% for (let campground of campgrounds) { %>
    <div class="card mb-3">
      <div class="row">
        <div class="col-md-4">
          <% if (campground.images.length) { %>
            <img
              class="img-fluid"
              alt="<%= campground.title %>"
              src="<%= campground.images[0].url %>"
            />
          <% } else { %>
            <img
              class="img-fluid"
              alt="Default campground image"
              src="https://res.cloudinary.com/dv6keahg3/image/upload/v1680641660/Outdoorsy/lz8jjv2gyynjil7lswf4_vjjbkn.png"
            />
          <% } %>
        </div>
        <div class="col-md-8">
          <div class="card-body">
            <h5 class="card-title"><%= campground.title %></h5>
            <p class="card-text"><%= campground.description %></p>
            <p class="card-text">
              <small class="text-muted"><%= campground.location %></small>
            </p>
            <!-- FIXED: Use basePath variable -->
            <a
              class="btn btn-primary"
              href="<%= basePath %>/campgrounds/<%= campground._id %>"
            >
              View <%= campground.title %>
            </a>
          </div>
        </div>
      </div>
    </div>
  <% } %>
</div>

<script>
  const mapToken = '<%- process.env.MAPBOX_TOKEN %>';
  const campgrounds = { features:   <%- JSON.stringify(campgrounds) %> };

  mapboxgl.accessToken = mapToken;
  const map = new mapboxgl.Map({
    container: "cluster-map",
    style: "mapbox://styles/mapbox/light-v10",
    center: [-103.59179687498357, 40.66995747013945],
    zoom: 3,
  });

  map.addControl(new mapboxgl.NavigationControl());

  map.on("load", function () {
    map.addSource("campgrounds", {
      type: "geojson",
      data: campgrounds,
      cluster: true,
      clusterMaxZoom: 14,
      clusterRadius: 50,
    });

    map.addLayer({
      id: "clusters",
      type: "circle",
      source: "campgrounds",
      filter: ["has", "point_count"],
      paint: {
        "circle-color": [
          "step",
          ["get", "point_count"],
          "#00BCD4",
          10,
          "#2196F3",
          30,
          "#3F51B5",
        ],
        "circle-radius": ["step", ["get", "point_count"], 15, 10, 20, 30, 25],
      },
    });

    map.addLayer({
      id: "cluster-count",
      type: "symbol",
      source: "campgrounds",
      filter: ["has", "point_count"],
      layout: {
        "text-field": "{point_count_abbreviated}",
        "text-font": ["DIN Offc Pro Medium", "Arial Unicode MS Bold"],
        "text-size": 12,
      },
    });

    map.addLayer({
      id: "unclustered-point",
      type: "circle",
      source: "campgrounds",
      filter: ["!", ["has", "point_count"]],
      paint: {
        "circle-color": "#11b4da",
        "circle-radius": 4,
        "circle-stroke-width": 1,
        "circle-stroke-color": "#fff",
      },
    });

    map.on("click", "clusters", function (e) {
      const features = map.queryRenderedFeatures(e.point, {
        layers: ["clusters"],
      });
      const clusterId = features[0].properties.cluster_id;
      map.getSource("campgrounds").getClusterExpansionZoom(clusterId, function (err, zoom) {
        if (err) return;

        map.easeTo({
          center: features[0].geometry.coordinates,
          zoom: zoom,
        });
      });
    });

    map.on("click", "unclustered-point", function (e) {
      const { popUpMarkup } = e.features[0].properties;
      const coordinates = e.features[0].geometry.coordinates.slice();

      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
      }

      new mapboxgl.Popup()
        .setLngLat(coordinates)
        .setHTML(popUpMarkup)
        .addTo(map);
    });

    map.on("mouseenter", "clusters", function () {
      map.getCanvas().style.cursor = "pointer";
    });
    map.on("mouseleave", "clusters", function () {
      map.getCanvas().style.cursor = "";
    });
  });
</script>