openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Outdoorsy"
  description: Campground review site
tags:
  - name: campgrounds
    description: Everything about your campgrounds
  - name: login
    description: Access to Outdoorsy login
  - name: user
    description: Operations about user
paths:
  /campgrounds:
    get:
      tags:
        - campgrounds
      summary: Return the HTML for the campground list page
      responses:
        "200":
          description: The page displaying a list of all the currrent campgrounds in the DB
          content:
            text/html:
              schema:
                type: string
        404:
          description: No campgrounds found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - campgrounds
      summary: Insert a new Campground record in the database
      description: Insert a new Campground record in the database
      operationId: addCampground
      requestBody:
        description: Create a new campground record in the DB
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Campgrounds"
          application/xml:
            schema:
              $ref: "#/components/schemas/Campgrounds"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Campgrounds"
        required: true
      responses:
        "200":
          description: Insert a new Campground record in the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campgrounds"
        404:
          description: No campgrounds found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /campgrounds/new:
    get:
      tags:
        - campgrounds
      summary: Return the HTML for new campground form
      description: Return the HTML for new campground form
      operationId: getNewCampgroundForm
      responses:
        "200":
          description: Only returns 200
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campground"
            application/xml:
              schema:
                $ref: "#/components/schemas/Campground"
  /campgrounds/{id}:
    get:
      tags:
        - campgrounds
      summary: Find campground review by ID
      description: Find campground review by ID
      operationId: getCampgroundById
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric ID of the Campground record to edit
          example: 646d919387d1d5003b83728c
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campgrounds"
            application/xml:
              schema:
                $ref: "#/components/schemas/Campgrounds"
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
    put:
      tags:
        - campgrounds
      summary: Update campground review
      description: This can only be done by a user that is logged in
      operationId: updateCampground
      parameters:
        - name: _id
          in: path
          required: true
          description: Numeric ID of the Campground record to edit
          example: 646d919387d1d5003b83728c
          schema:
            type: string
      requestBody:
        description: Update an existing campground in the DB
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/xml:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid campground id supplied
        "404":
          description: Campground not found
    delete:
      tags:
        - campgrounds
      summary: Delete campground record from DB
      description: Delete campground record from DB
      operationId: deleteCampground
      parameters:
        - name: _id
          in: path
          required: true
          description: Numeric ID of the Campground record to edit
          example: 646d919387d1d5003b83728c
          schema:
            type: string
      responses:
        "400":
          description: Invalid campground id supplied
        "404":
          description: Campground not found
  /campgrounds/{id}/edit:
    get:
      tags:
        - campgrounds
      summary: Return edit campground HTML page including campsite details
      description: Return edit campground HTML page including campsite details
      operationId: getCampgroundById
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric ID of the Campground record to edit
          example: 646d919387d1d5003b83728c
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campgrounds"
            application/xml:
              schema:
                $ref: "#/components/schemas/Campgrounds"
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
components:
  schemas:
    Campgrounds:
      type: object
      required:
        - title
        - location
        - price
        - description
      properties:
        _id:
          type: string
          format: uuid
          description: The id auto generated by mongoose for the campsite
        geometry:
          type: array
          description: Array of geometry objects
          items:
            type: object
            properties:
              point:
                type: array
                items:
                  type: object
                  properties:
                    co-ordinate:
                      type: number
                      format: float
        title:
          type: string
          description: The title of the campsite
        location:
          type: string
          description: The location of the campsite
        price:
          type: number
          format: float
          description: The price for the campsite
        description:
          type: string
          description: The description of the campsite
        images:
          type: array
          description: Array of image objects
          items:
            type: object
            properties:
              _id:
                type: string
                format: uuid
                description: The id auto generated by mongoose for the campground
              url:
                type: string
                format: uri
                description: The url of the image
              filename:
                type: string
                description: The filename of the image
        reviews:
          type: array
          description: Array of objects review ID's
          items:
            type: object
            properties:
              _id:
                type: string
                format: uuid
                description: The id auto generated by mongoose for the review
        author:
          type: string
          format: uuid
          description: ID of person that created the review
        __v:
          type: number
          format: int32
          description: Version of the campsite review, starting at 0 and incremented by +1 with each change saved
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []
